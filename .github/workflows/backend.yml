env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres

name: Backend Tests
on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/**'

defaults:
  run:
    working-directory: backend

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports: ["5432:5432"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: backend
          bundler-cache: true
      - name: Install dependencies
        run: |
          sudo apt-get -yqq install libpq-dev build-essential libcurl4-openssl-dev
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}
      - name: Install Node Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Setup test database
        env:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: ${{ env.POSTGRES_USER }}
          PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
        run: |
          bin/rails db:drop db:create db:structure:load
      - name: Run tests
        env:
          RAILS_ENV: test
          PGHOST: localhost
          PGUSER: ${{ env.POSTGRES_USER }}
          PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
        run: bundle exec rspec spec
  deploy:
    name: Deploy
    needs: tests
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy
        uses: miloserdow/capistrano-deploy@master
        with:
          target: production
          deploy_key: ${{ secrets.PRODUCTION_DEPLOY_ENC_KEY }}
          enc_rsa_key_pth: ./config/deploy/encrypted_keys/production_deploy_enc
